#!/usr/bin/env ruby
# coding: utf-8
# frozen_string_literal: true

# Berksfile for FIDATA Infrastructure
# Copyright Â© 2016-2018  Basil Peace
#
# CRED: Based on MistiC's nested Berksfiles example
# https://habrahabr.ru/company/epam_systems/blog/221791/ <>
#
# This file is part of FIDATA Infrastructure.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# BLOCKED: https://www.jfrog.com/confluence/display/RTF/Chef+Cookbook+Repositories#ChefCookbookRepositories-UsingtheBerkshelfCommandLine <>
# source 'https://fidata.jfrog.io/fidata/api/chef/chef'
source 'https://supermarket.chef.io'

def process_cookbook_path(path)
  berksfile = path + 'Berksfile'
  instance_eval(berksfile.read, berksfile.realdirpath.to_s) if berksfile.exist?
  cookbook path.basename.to_s, path: path
end

def process_path(path)
  Pathname.new(path).children.select { |c| c.directory? }.each do |cookbook_path|
    process_cookbook_path cookbook_path
  end
end

process_path 'cookbooks'
process_path 'site-cookbooks'
